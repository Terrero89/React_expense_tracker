{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/expenses/ExpenseDate.js","components/expenses/ExpenseItem.js","components/expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","NewExpense","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","setTitle","onClick","setTimeout","Expenses","items","App","expenses","expense","console","log","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.046ae9d5.chunk.js","sourcesContent":["// concepts: onClick - onSubmit, useState(different ways to manage states) -- two way binding with value=\"\"\n\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  //useState to be able to capture the information typed.\n  //*TODO: We can create an object to avoid using all inputs separately\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n//title will be equal to each keystroke with the eevent object\n  \n  //?state that will read the values of usestate\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  //? evemt handler needs a event object (browser object.)\n  const submiHandler = (event) => {\n    event.preventDefault(); //event.preventDefault to do no reload when clicked\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate),\n    };\n    // console.log(expenseData); // no longer needed since we are executing the custom event from new expense\n    props.onSaveExpenseData(expenseData); // we add expenseData as a parameter to submit the same information to the parent elements\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submiHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\"> Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n  // we now save and keep the props to use.\n  // enteredExpenseData is just a name for the data sent from the form in ExpenseForm\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      //?this is all the data together from the submitted form\n      ...enteredExpenseData,\n      id: Math.random().toString(), //dynamic id for now.\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {/* we add a prop to expenseForm */}\n      {/* we pass the event handler to the save data */}\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import './Card.css'\n\nfunction Card(props){\n    const classes = 'card ' + props.className; //TODO: this is to make sure any value set in the class name prop is added to the classes const, class from expense item,\n    return <div className= {classes}>{props.children}</div>\n\n}\n\n\nexport default Card;","import \"./ExpenseDate.css\";\nconst ExpenseDate = (props)=>{\n    const month = props.date.toLocaleString('en-us',{month:'long'})\n    const day = props.date.toLocaleString('en-us',{day:'2-digit'})\n    const year = props.date.getFullYear()\n\n    return (\n    <div className=\"expense-date\">\n\n\n    <div className=\"expense-date__month\">{month}</div>\n\n     <div className=\"expense-date__year\">{year}</div>\n\n     <div className=\"expense-date__day\">{day}</div>\n\n    </div>\n   \n   \n    );\n}\n\nexport default ExpenseDate;","import { React, useState } from 'react'\nimport ExpenseDate from \"./ExpenseDate.js\";\nimport \"./ExpenseItem.css\";\nimport Card from \"../UI/Card.js\";\n\n\n\nconst ExpenseItem = (props) => {\n  //set the start when we click on the click handler to show setTitle Value \n  const [title, setTitle] = useState(props.title)\n  \n  function clickHandler() {\n    setTitle('hello, dude')\n  \n    setTimeout(() => setTitle(title), 2000) // after 2 seconds, setTitle\n  }\n\n\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n\n      <div className=\"expense-item__description\">\n        <h2>{title}</h2>\n\n        <div className=\"expense-item__price\" >{props.amount}</div>\n      </div>\n\n      <button onClick={clickHandler}>Change Title</button>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;","import Card from \"../UI/Card\"\nimport ExpenseItem from \"../expenses/ExpenseItem\";\nimport './Expenses.css'\nconst Expenses = (props) =>{\n\n \n      return (\n        <Card className=\"expenses\">\n        <ExpenseItem\n        title={props.items[0].title}\n        amount={props.items[0].amount}\n        date={props.items[0].date}\n      ></ExpenseItem>\n        <ExpenseItem\n        title={props.items[1].title}\n        amount={props.items[1].amount}\n        date={props.items[1].date}\n      ></ExpenseItem>\n        <ExpenseItem\n        title={props.items[2].title}\n        amount={props.items[2].amount}\n        date={props.items[2].date}\n      ></ExpenseItem>\n        <ExpenseItem\n        title={props.items[3].title}\n        amount={props.items[3].amount}\n        date={props.items[3].date}\n      ></ExpenseItem>\n           \n            \n        \n          \n        </Card>\n      )\n}\n\nexport default Expenses;","import NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/expenses/Expenses\";\n\nconst App = () => {\n  const expenses = [\n    {\n      id: \"e1\",\n      title: \"Toilet Paper\",\n      amount: 94.12,\n      date: new Date(2020, 7, 144),\n    },\n    { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"New Desk (Wooden)\",\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  const addExpenseHandler = expense => {\n    console.log('in APP');\n    console.log(expense)\n  \n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses items={expenses}></Expenses>\n    </div>\n  );\n};\n\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}