{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","NewExpense","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpenseList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1d02076d.chunk.js","sourcesContent":["// concepts: onClick - onSubmit, useState(different ways to manage states) -- two way binding with value=\"\"\n\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  //useState to be able to capture the information typed.\n  // this way is better since yu manage state changes separately from each other\n  //STATE OF THE INFORMATION ENTERED\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  //HANDLERS TO RECORD THE INPUTS\n  //state that will read the values of usestate\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n  //SUBMIT HANDLER THAT WILL SUBMIT THE DATA IN IT\n  const submitHandler = (event) => {\n    event.preventDefault(); //event.preventDefault to do no reload when clicked\n\n    //object that contains the expense data information to be passed to next component with event handler\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate), //WILL CONVERT IT INTO A DATE OBJECT CORRECT FORMAT\n    };\n\n    props.onSaveExpenseData(expenseData); // we add expenseData as a parameter to submit the same information to the parent elements\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount} //use for two way binding so value can be seen on input field\n            onChange={amountChangeHandler}\n          />\n        </div>\n\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2025-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n  //?we now save and keep the props to use.\n  //?enteredExpenseData is just parameter name for the data sent from the form in ExpenseForm\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      //?this is all the data together from the submitted form\n      ...enteredExpenseData,\n      id: Math.random().toString(), //dynamic id for now.\n    };\n \n    props.onAddExpense(expenseData);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import './Card.css'\n\nfunction Card(props){\n    const classes = 'card ' + props.className; //TODO: this is to make sure any value set in the class name prop is added to the classes const, class from expense item,\n    return <div className= {classes}>{props.children}</div>\n\n}\n\n\nexport default Card;","import React from \"react\";\n\nimport \"./ExpenseFilter.css\";\n\n//TODO: THIS PROP WE GOING TO USE HERE FROM EXPENSE.JS\nconst ExpensesFilter = (props) => {\n\n    //TODO  WILL HANDLE THE CHANGE ON FILTER SELECTION ON CHANGE IN SELECT HTML\n    const filterHandler = (event) => {\n      // console.log(event.target.value)\n      //?THIS PROP WE GOING TO USE HERE FROM EXPENSE.JS\n      props.onChangeFilter(event.target.value); //? this will use onChangeFilter as a function that receives the event and forwards the event.target.value\n    }\n  \n  //?PROP SELECTED IS USED TO ADD THE DEFAULT VALUE OF THE USE STATE IN PARENT \n    return (\n      <div className=\"expenses-filter\">\n        <div className=\"expenses-filter__control\">\n          <label>Filter by year</label>\n          <select value={props.selected} onChange={filterHandler}>\n          \n            <option value=\"2023\">2023</option>\n            <option value=\"2022\">2022</option>\n            <option value=\"2021\">2021</option>\n            <option value=\"2020\">2020</option>\n            <option value=\"2019\">2019</option>\n          </select>\n        </div>\n      </div>\n    );\n};\n\nexport default ExpensesFilter;\n","import \"./ExpenseDate.css\";\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"en-us\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-us\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n\n      <div className=\"expense-date__year\">{year}</div>\n\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import { React} from 'react'\nimport ExpenseDate from \"./ExpenseDate.js\";\nimport \"./ExpenseItem.css\";\nimport Card from \"../UI/Card.js\";\n\n\n\nconst ExpenseItem = (props) => {\n  //set the start when we click on the click handler to show setTitle Value  \n\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n\n          <div className=\"expense-item__price\">{props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n}\n\nexport default ExpenseItem;","import React from \"react\";\nimport \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\n\nconst ExpenseList = (props) => {\n\n\n  if (props.items.length === 0) { \n    return <h2 className=\"expenses-list__fallback\">FOUND NO EXPENSES.</h2>\n  }\n\n  return (\n    <ul className={'expenses-list'}>\n      {      props.items.length > 0 &&\n      props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  )\n};\n\nexport default ExpenseList;\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\nconst Chart = (props) => {\n  const dataPointsValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointsValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n        \n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n    const chartDataPoints = [\n      { label: \"Jan\", value: 0 },\n      { label: \"Feb\", value: 0 },\n      { label: \"Mar\", value: 0 },\n      { label: \"Apr\", value: 0 },\n      { label: \"May\", value: 0 },\n      { label: \"Jun\", value: 0 },\n      { label: \"Aug\", value: 0 },\n      { label: \"Sep\", value: 0 },\n      { label: \"Oct\", value: 0 },\n      { label: \"Nov\", value: 0 },\n      { label: \"Dec\", value: 0 },\n    ];\n\n    for (const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth()\n        chartDataPoints[expenseMonth].value += expense.amount\n    }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport \"./Expenses.css\";\n\nconst Expenses = (props) => {\n  const date = new Date().getFullYear().toString();\n\n  const [filteredYear, setFilteredYear] = useState(date);\n  //todo: USESTATE WILL BE USED IN THE COMPONENT THE STATE WILL CHANGE\n  //TODO: Function that will be done from parent to reflect in child component\n  //TODO: then pass function filterChangeHandler to child component ExpenseFilter to point to this function\n  //todo:  filtered year will be reflected in the default value of the useState('2020') with value in child component ExpenseFilter\n  const filterChangeHandler = (selectedYear) => {\n    // console.log(\"Expenses.JS\");\n    // console.log(selectedYear);\n    //?instead of logging the value we add the change of value with state\n\n    setFilteredYear(selectedYear); //? WILL BE EQUAL TO THE VALUE OF THE SELECTED YEAR ARGUMENT IN PARTENT\n  };\n\n  const filteredExpenses = props.items.filter(\n    (expense) => expense.date.getFullYear().toString() === filteredYear\n  );\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpenseFilter\n          // CONTROLLED COMPONENT WITH THE SELECTED AND ONCHANGEFILTER\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n       <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, {useState} from 'react';\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\n\n  const DUMMY_EXPENSES = [\n    {\n      id: \"e1\",\n      title: \"Toilet Paper\",\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"New Desk (Wooden)\",\n      amount: 450.99,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n\nconst App = () => {\n    \n const[expenses,setExpenses] = useState(DUMMY_EXPENSES)\n  \n\n  const addExpenseHandler = expense => {\n    // console.log('in APP.JS');\n    // console.log(expense)\n      //?not correct since does not contain last snapshot of state\n    // setExpenses([expense, ...expenses])\n    //?correct!\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    })\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses items={expenses}></Expenses>\n    </div>\n  );\n};\n\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}